// Mocks generated by Mockito 5.1.0 from annotations
// in individual_project/test/movie_detail_cubit/movie_detail_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:individual_project/model/cast.dart' as _i9;
import 'package:individual_project/model/ganre.dart' as _i7;
import 'package:individual_project/model/movie.dart' as _i6;
import 'package:individual_project/model/movie_detail.dart' as _i2;
import 'package:individual_project/model/person.dart' as _i3;
import 'package:individual_project/model/screenshot.dart' as _i8;
import 'package:individual_project/service/api_moviedb.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMovieDetail_0 extends _i1.Fake implements _i2.MovieDetail {}

class _FakePerson_1 extends _i1.Fake implements _i3.Person {}

/// A class which mocks [ApiMovieDb].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiMovieDb extends _i1.Mock implements _i4.ApiMovieDb {
  MockApiMovieDb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.Movie>> getNowPlayingMovie() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovie, []),
              returnValue: Future<List<_i6.Movie>>.value(<_i6.Movie>[]))
          as _i5.Future<List<_i6.Movie>>);
  @override
  _i5.Future<List<_i6.Movie>> getPopularMovie() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovie, []),
              returnValue: Future<List<_i6.Movie>>.value(<_i6.Movie>[]))
          as _i5.Future<List<_i6.Movie>>);
  @override
  _i5.Future<List<_i7.Ganre>> getGenreList() =>
      (super.noSuchMethod(Invocation.method(#getGenreList, []),
              returnValue: Future<List<_i7.Ganre>>.value(<_i7.Ganre>[]))
          as _i5.Future<List<_i7.Ganre>>);
  @override
  _i5.Future<List<_i6.Movie>> getMovieByGanre(int? selectedGanre) =>
      (super.noSuchMethod(Invocation.method(#getMovieByGanre, [selectedGanre]),
              returnValue: Future<List<_i6.Movie>>.value(<_i6.Movie>[]))
          as _i5.Future<List<_i6.Movie>>);
  @override
  _i5.Future<_i2.MovieDetail> getMovieDetail(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [movieId]),
              returnValue: Future<_i2.MovieDetail>.value(_FakeMovieDetail_0()))
          as _i5.Future<_i2.MovieDetail>);
  @override
  _i5.Future<List<_i8.Screenshot>> getMovieImage(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieImage, [movieId]),
              returnValue:
                  Future<List<_i8.Screenshot>>.value(<_i8.Screenshot>[]))
          as _i5.Future<List<_i8.Screenshot>>);
  @override
  _i5.Future<List<_i9.Cast>> getCastList(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getCastList, [movieId]),
              returnValue: Future<List<_i9.Cast>>.value(<_i9.Cast>[]))
          as _i5.Future<List<_i9.Cast>>);
  @override
  _i5.Future<_i3.Person> getPerson(int? personId) =>
      (super.noSuchMethod(Invocation.method(#getPerson, [personId]),
              returnValue: Future<_i3.Person>.value(_FakePerson_1()))
          as _i5.Future<_i3.Person>);
  @override
  _i5.Future<List<_i6.Movie>> getSearchMovieList(String? query) =>
      (super.noSuchMethod(Invocation.method(#getSearchMovieList, [query]),
              returnValue: Future<List<_i6.Movie>>.value(<_i6.Movie>[]))
          as _i5.Future<List<_i6.Movie>>);
}
